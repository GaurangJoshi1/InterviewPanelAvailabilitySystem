@using InterviewPanelAvailabilitySystemMVC.ViewModels
@model SlotCountReportViewModel
@{
    var jobRoles = ViewBag.JobRoles as List<JobRoleViewModel>;
    var selectedJobRoleId = ViewBag.JobRoleId;
}



<div class="card mb-3" id="montly">
    <form asp-action="JobRoleBasedCountReportReport" method="post">
        <partial name="_SlotCountReportView" />
        <div class="card-body btn-light" id="customCard">
            <h2 class="custom-heading  text-center my-4">Job Role Count</h2>
            <div class="form-group rounded-corner">
                <label><b>Select:</b></label>
                <select class="form-control" id="jobRoleSelect" name="jobRoleId" onchange="submitFormOnChange(this)">
                    <option value="0">---Select Job Role----</option>
                    @for (int i = 0; i < jobRoles.Count; i++)
                    {
                        <option value="@(i+1)">@jobRoles[i].JobRoleName</option>
                    }
                </select>
                    <div class="text-danger" id="jobRoleErrorMessage" style=" color: red;">*Please select a Job Role to view report.</div>
            </div>

            <div id="reportDisplay">
                @if (Model != null && selectedJobRoleId != null && selectedJobRoleId != 0)
                {
                    <h4><strong>Available Slot:</strong> @Model.AvailableSlot</h4>
                    <h4><strong>Booked Slot:</strong> @Model.BookedSlot</h4>
                }
            </div>
        </div>
    </form>
    
</div>


<script>
    // Function to submit form on select change
    function submitFormOnChange(select) {
        var selectedJobRole = select.value;
        if (selectedJobRole === "0") {
            $('#jobRoleErrorMessage').show(); // 'show' should be lowercase
            $('#reportDisplay').hide();
        } else {
            $('#jobRoleErrorMessage').hide();
            select.closest('form').submit();
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        var jobRoleSelect = document.getElementById('jobRoleSelect');
        var selectedJobRoleId = '@ViewBag.JobRoleId'; // Ensure this renders correctly as a string in JavaScript

        if (selectedJobRoleId) {
            for (var i = 0; i < jobRoleSelect.options.length; i++) {
                if (jobRoleSelect.options[i].value === selectedJobRoleId) {
                    jobRoleSelect.options[i].selected = true;
                    break;
                }
            }
        }

        if (selectedJobRoleId === "0" || selectedJobRoleId === "") {
            $('#jobRoleErrorMessage').show(); // 'show' should be lowercase
            $('#reportDisplay').hide();
        } else {
            $('#jobRoleErrorMessage').hide();
            $('#reportDisplay').show();
            // select.closest('form').submit();
        }
    });
</script>







<style>

    #customCard {
        padding: 20px;
        background-color: #f0f0f0;
        border-radius: 10px;
        border: 1px solid #ccc;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .custom-select {
        border: 1px solid #ced4da; /* Add border */
        padding: 0.375rem 2rem 0.375rem 1rem; /* Add padding */
        font-size: 1rem; /* Set font size */
        border-radius: 0.25rem; /* Add border radius */
        background-color: #fff; /* Set background color */
        background-image: none; /* Remove background image */
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; /* Add transition */
    }

        .custom-select:focus {
            border-color: #80bdff; /* Set border color on focus */
            outline: 0; /* Remove outline */
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Add box shadow on focus */
        }

    .table {
        margin-top: 20px; /* Add margin top for spacing */
    }



    

    .form-group {
        margin-bottom: 20px;
    }

    .rounded-corner {
        border-radius: 8px;
        background-color: #fff;
        border: 1px solid #ddd;
        padding: 15px;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .salary-data {
        margin-top: 0; /* Remove margin-top if not needed */
    }

        .salary-data table {
            width: 100%; /* Ensures the table takes up full width */
            border-collapse: collapse;
        }

            .salary-data table th,
            .salary-data table td {
                border: 1px solid #ddd;
                padding: 8px;
                text-align: center;
            }

    .no-data {
        background-color: #f8d7da;
        color: #721c24;
        padding: 15px;
        text-align: center;
        margin-top: 20px;
        border-radius: 8px;
        border: 1px solid #f5c6cb;
    }

    .table-responsive {
        overflow-x: auto;
        WIDTH: 1250PX;
        -webkit-overflow-scrolling: touch;
    }
</style>